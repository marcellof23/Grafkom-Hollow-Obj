// Now create an array of positions for the cube.

// prettier-ignore
var positions = [
  // First block
  -0.9, 1.1, 0.9,
  -0.9, 1.1, -0.9, 
  -1.1, 1.1, 0.9, 
  -1.1, 1.1, -0.9,

  -0.9, 0.9, 0.9,
  -0.9, 0.9, -0.9, 
  -1.1, 0.9, 0.9, 
  -1.1, 0.9, -0.9,

  -0.9, 0.9, -0.9,
  -0.9, 1.1, -0.9, 
  -0.9, 0.9, 0.9, 
  -0.9, 1.1, 0.9,

  -1.1, 0.9, -0.9,
  -1.1, 1.1, -0.9, 
  -1.1, 0.9, 0.9, 
  -1.1, 1.1, 0.9,

  -1.1, 0.9, -0.9,
  -0.9, 0.9, -0.9, 
  -1.1, 1.1, -0.9, 
  -0.9, 1.1, -0.9,

  -1.1, 0.9, 0.9,
  -0.9, 0.9, 0.9, 
  -1.1, 1.1,  0.9, 
  -0.9, 1.1,  0.9,

  // Second block
  0.9, 1.1, 0.9,
  0.9, 1.1, -0.9, 
  1.1, 1.1, 0.9, 
  1.1, 1.1, -0.9,

  0.9, 0.9, 0.9,
  0.9, 0.9, -0.9, 
  1.1, 0.9, 0.9, 
  1.1, 0.9, -0.9,

  0.9, 0.9, -0.9,
  0.9, 1.1, -0.9, 
  0.9, 0.9, 0.9, 
  0.9, 1.1, 0.9,

  1.1, 0.9, -0.9,
  1.1, 1.1, -0.9, 
  1.1, 0.9, 0.9, 
  1.1, 1.1, 0.9,

  1.1, 0.9, -0.9,
  0.9, 0.9, -0.9, 
  1.1, 1.1, -0.9, 
  0.9, 1.1, -0.9,

  1.1, 0.9, 0.9,
  0.9, 0.9, 0.9, 
  1.1, 1.1, 0.9, 
  0.9, 1.1, 0.9,

  // Third block
  -1.1, 0.9, -0.9,
  -1.1, 0.9, -1.1, 
  1.1,  0.9, -0.9, 
  1.1,  0.9, -1.1,

  -1.1, 1.1, -0.9,
  -1.1, 1.1, -1.1, 
  1.1,  1.1, -0.9, 
  1.1,  1.1, -1.1,

  -1.1, 0.9, -1.1,
  -1.1, 1.1, -1.1, 
  1.1,  0.9, -1.1, 
  1.1,  1.1, -1.1,

  -1.1, 0.9, -0.9,
  -1.1, 0.9, -1.1, 
  -1.1,  1.1, -0.9, 
  -1.1,  1.1, -1.1,

  1.1, 0.9, -0.9,
  1.1, 0.9, -1.1, 
  1.1,  1.1, -0.9, 
  1.1,  1.1, -1.1,



  // forth block
  -1.1, 0.9, 0.9,
  -1.1, 0.9, 1.1, 
  1.1,  0.9, 0.9, 
  1.1,  0.9, 1.1,

  -1.1, 1.1, 0.9,
  -1.1, 1.1, 1.1, 
  1.1,  1.1, 0.9, 
  1.1,  1.1, 1.1,

  -1.1, 0.9, 1.1,
  -1.1, 1.1, 1.1, 
  1.1,  0.9, 1.1, 
  1.1,  1.1, 1.1,

  -1.1, 0.9,  0.9,
  -1.1, 0.9,  1.1, 
  -1.1,  1.1, 0.9, 
  -1.1,  1.1, 1.1,

  1.1, 0.9,  0.9,
  1.1, 0.9,  1.1, 
  1.1,  1.1, 0.9, 
  1.1,  1.1, 1.1,
  
  // fifth block
  -0.9, -1.1, 0.9,
  -0.9, -1.1, -0.9, 
  -1.1, -1.1, 0.9, 
  -1.1, -1.1, -0.9,

  -0.9, -0.9, 0.9,
  -0.9, -0.9, -0.9, 
  -1.1, -0.9, 0.9, 
  -1.1, -0.9, -0.9,

  -0.9, -0.9, -0.9,
  -0.9, -1.1, -0.9, 
  -0.9, -0.9, 0.9, 
  -0.9, -1.1, 0.9,

  -1.1, -0.9, -0.9,
  -1.1, -1.1, -0.9, 
  -1.1, -0.9, 0.9, 
  -1.1, -1.1, 0.9,

  -1.1, -0.9, -0.9,
  -0.9, -0.9, -0.9, 
  -1.1, -1.1, -0.9, 
  -0.9, -1.1, -0.9,

  -1.1, -0.9, 0.9,
  -0.9, -0.9, 0.9, 
  -1.1, -1.1,  0.9, 
  -0.9, -1.1,  0.9,

  // Sixth block
  0.9, -1.1, 0.9,
  0.9, -1.1, -0.9, 
  1.1, -1.1, 0.9, 
  1.1, -1.1, -0.9,

  0.9, -0.9, 0.9,
  0.9, -0.9, -0.9, 
  1.1, -0.9, 0.9, 
  1.1, -0.9, -0.9,

  0.9, -0.9, -0.9,
  0.9, -1.1, -0.9, 
  0.9, -0.9, 0.9, 
  0.9, -1.1, 0.9,

  1.1, -0.9, -0.9,
  1.1, -1.1, -0.9, 
  1.1, -0.9, 0.9, 
  1.1, -1.1, 0.9,

  1.1, -0.9, -0.9,
  0.9, -0.9, -0.9, 
  1.1, -1.1, -0.9, 
  0.9, -1.1, -0.9,

  1.1, -0.9, 0.9,
  0.9, -0.9, 0.9, 
  1.1, -1.1, 0.9, 
  0.9, -1.1, 0.9,

  // Seventh block
  -1.1, -0.9, -0.9,
  -1.1, -0.9, -1.1, 
  1.1,  -0.9, -0.9, 
  1.1,  -0.9, -1.1,

  -1.1, -1.1, -0.9,
  -1.1, -1.1, -1.1, 
  1.1,  -1.1, -0.9, 
  1.1,  -1.1, -1.1,

  -1.1, -0.9, -1.1,
  -1.1, -1.1, -1.1, 
  1.1,  -0.9, -1.1, 
  1.1,  -1.1, -1.1,

  -1.1, -0.9, -0.9,
  -1.1, -0.9, -1.1, 
  -1.1, -1.1, -0.9, 
  -1.1, -1.1, -1.1,

  1.1, -0.9, -0.9,
  1.1, -0.9, -1.1, 
  1.1, -1.1, -0.9, 
  1.1, -1.1, -1.1,



  // forth block
  -1.1, -0.9, 0.9,
  -1.1, -0.9, 1.1, 
  1.1,  -0.9, 0.9, 
  1.1,  -0.9, 1.1,

  -1.1, -1.1, 0.9,
  -1.1, -1.1, 1.1, 
  1.1,  -1.1, 0.9, 
  1.1,  -1.1, 1.1,

  -1.1, -0.9, 1.1,
  -1.1, -1.1, 1.1, 
  1.1,  -0.9, 1.1, 
  1.1,  -1.1, 1.1,

  -1.1, -0.9,  0.9,
  -1.1, -0.9,  1.1, 
  -1.1, -1.1, 0.9, 
  -1.1, -1.1, 1.1,

  1.1, -0.9,  0.9,
  1.1, -0.9,  1.1, 
  1.1, -1.1, 0.9, 
  1.1, -1.1, 1.1,

  // ninth block
  0.9,   0.9, -1.1,
  1.1,   0.9, -1.1, 
  0.9,  -0.9, -1.1, 
  1.1,  -0.9, -1.1,

  0.9,   0.9, -0.9,
  1.1,   0.9, -0.9, 
  0.9,  -0.9, -0.9, 
  1.1,  -0.9, -0.9,

  1.1,   0.9, -0.9,
  1.1,   0.9, -1.1, 
  1.1,  -0.9, -0.9, 
  1.1,  -0.9, -1.1,

  0.9,   0.9, -0.9,
  0.9,   0.9, -1.1, 
  0.9,  -0.9, -0.9, 
  0.9,  -0.9, -1.1,

  // tenth block
  0.9,   0.9, 1.1,
  1.1,   0.9, 1.1, 
  0.9,  -0.9, 1.1, 
  1.1,  -0.9, 1.1,

  0.9,   0.9, 0.9,
  1.1,   0.9, 0.9, 
  0.9,  -0.9, 0.9, 
  1.1,  -0.9, 0.9,

  1.1,   0.9, 0.9,
  1.1,   0.9, 1.1, 
  1.1,  -0.9, 0.9, 
  1.1,  -0.9, 1.1,

  0.9,   0.9, 0.9,
  0.9,   0.9, 1.1, 
  0.9,  -0.9, 0.9, 
  0.9,  -0.9, 1.1,

  // eleventh block
  -0.9,   0.9, 1.1,
  -1.1,   0.9, 1.1, 
  -0.9,  -0.9, 1.1, 
  -1.1,  -0.9, 1.1,

  -0.9,   0.9, 0.9,
  -1.1,   0.9, 0.9, 
  -0.9,  -0.9, 0.9, 
  -1.1,  -0.9, 0.9,

  -1.1,   0.9, 0.9,
  -1.1,   0.9, 1.1, 
  -1.1,  -0.9, 0.9, 
  -1.1,  -0.9, 1.1,

  -0.9,   0.9, 0.9,
  -0.9,   0.9, 1.1, 
  -0.9,  -0.9, 0.9, 
  -0.9,  -0.9, 1.1,

  // twelveth block
  -0.9,   0.9, -1.1,
  -1.1,   0.9, -1.1, 
  -0.9,  -0.9, -1.1, 
  -1.1,  -0.9, -1.1,

  -0.9,   0.9, -0.9,
  -1.1,   0.9, -0.9, 
  -0.9,  -0.9, -0.9, 
  -1.1,  -0.9, -0.9,

  -1.1,   0.9, -0.9,
  -1.1,   0.9, -1.1, 
  -1.1,  -0.9, -0.9, 
  -1.1,  -0.9, -1.1,

  -0.9,   0.9, -0.9,
  -0.9,   0.9, -1.1, 
  -0.9,  -0.9, -0.9, 
  -0.9,  -0.9, -1.1,
];

positions = positions.map((x) => x * 0.6);

console.log(positions);
